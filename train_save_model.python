{"version":"NotebookV1","origId":2546950486988879,"name":"train_save_model","language":"python","commands":[{"version":"CommandV1","origId":2546950486988880,"guid":"c5cd048a-bfc5-40e9-99bc-820bf83d9f2c","subtype":"command","commandType":"auto","position":1.0,"command":"%md ## Train and Save a Classification Model\n\nWe will train a classification model (Logistic Regression) that uses features of a loan applicant to predict whether or not a loan application will be approved.\n\n","commandVersion":29,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407558938,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"db821792-2201-43f1-8773-8acdf30b4696"},{"version":"CommandV1","origId":2546950486988881,"guid":"c1ae47c9-4411-4afb-ba69-30590e823546","subtype":"command","commandType":"auto","position":2.0,"command":"from pyspark.sql.types import *\nfrom pyspark.sql.functions import *","commandVersion":2,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407576207,"submitTime":1570407558945,"finishTime":1570407576255,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"aa4b5477-9f91-42f4-b789-46ed220bbe79"},{"version":"CommandV1","origId":2546950486988882,"guid":"905f5b1f-9941-4856-80c6-88e6dd4a10ea","subtype":"command","commandType":"auto","position":3.0,"command":"%md ### Load Source Data\nThe data is provided as a CSV file that has already been cleaned up for modeling. The data includes feature and label. We will load this data into a dataframe and display it.","commandVersion":26,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407558946,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"28ce99ca-5552-49ad-be4d-5ea3c0776c2c"},{"version":"CommandV1","origId":2546950486988883,"guid":"c1b99652-41a7-4ef0-9b05-ed450950c483","subtype":"command","commandType":"auto","position":4.0,"command":"loanSchema = StructType([\n  StructField(\"Loan_ID\", StringType(), False),\n  StructField(\"Gender\", StringType(), False),\n  StructField(\"Married\", StringType(), False),\n  StructField(\"Dependents\", StringType(), False),\n  StructField(\"Education\", StringType(), False),\n  StructField(\"Self_Employed\", StringType(), False),\n  StructField(\"ApplicantIncome\", IntegerType(), False),\n  StructField(\"CoapplicantIncome\", IntegerType(), False),\n  StructField(\"LoanAmount\", IntegerType(), False),\n  StructField(\"Loan_Amount_Term\", IntegerType(), False),\n  StructField(\"Credit_History\", IntegerType(), False),\n  StructField(\"Property_Area\", StringType(), False),\n  StructField(\"Loan_Status\", StringType(), False),\n])\n\ndata = spark.read.csv('/mnt/onbpoc/input/Loan-applicant-details.csv', schema=loanSchema, header=False)\ndata.show()","commandVersion":77,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+--------+------+-------+----------+------------+-------------+---------------+-----------------+----------+----------------+--------------+-------------+-----------+\n| Loan_ID|Gender|Married|Dependents|   Education|Self_Employed|ApplicantIncome|CoapplicantIncome|LoanAmount|Loan_Amount_Term|Credit_History|Property_Area|Loan_Status|\n+--------+------+-------+----------+------------+-------------+---------------+-----------------+----------+----------------+--------------+-------------+-----------+\n|LP001003|  Male|    Yes|         1|    Graduate|           No|           4583|             1508|       128|             360|             1|        Rural|          N|\n|LP001005|  Male|    Yes|         0|    Graduate|          Yes|           3000|                0|        66|             360|             1|        Urban|          Y|\n|LP001006|  Male|    Yes|         0|Not Graduate|           No|           2583|             2358|       120|             360|             1|        Urban|          Y|\n|LP001008|  Male|     No|         0|    Graduate|           No|           6000|                0|       141|             360|             1|        Urban|          Y|\n|LP001011|  Male|    Yes|         2|    Graduate|          Yes|           5417|             4196|       267|             360|             1|        Urban|          Y|\n|LP001013|  Male|    Yes|         0|Not Graduate|           No|           2333|             1516|        95|             360|             1|        Urban|          Y|\n|LP001014|  Male|    Yes|        3+|    Graduate|           No|           3036|             2504|       158|             360|             0|    Semiurban|          N|\n|LP001018|  Male|    Yes|         2|    Graduate|           No|           4006|             1526|       168|             360|             1|        Urban|          Y|\n|LP001020|  Male|    Yes|         1|    Graduate|           No|          12841|            10968|       349|             360|             1|    Semiurban|          N|\n|LP001024|  Male|    Yes|         2|    Graduate|           No|           3200|              700|        70|             360|             1|        Urban|          Y|\n|LP001028|  Male|    Yes|         2|    Graduate|           No|           3073|             8106|       200|             360|             1|        Urban|          Y|\n|LP001029|  Male|     No|         0|    Graduate|           No|           1853|             2840|       114|             360|             1|        Rural|          N|\n|LP001030|  Male|    Yes|         2|    Graduate|           No|           1299|             1086|        17|             120|             1|        Urban|          Y|\n|LP001032|  Male|     No|         0|    Graduate|           No|           4950|                0|       125|             360|             1|        Urban|          Y|\n|LP001036|Female|     No|         0|    Graduate|           No|           3510|                0|        76|             360|             0|        Urban|          N|\n|LP001038|  Male|    Yes|         0|Not Graduate|           No|           4887|                0|       133|             360|             1|        Rural|          N|\n|LP001043|  Male|    Yes|         0|Not Graduate|           No|           7660|                0|       104|             360|             0|        Urban|          N|\n|LP001046|  Male|    Yes|         1|    Graduate|           No|           5955|             5625|       315|             360|             1|        Urban|          Y|\n|LP001047|  Male|    Yes|         0|Not Graduate|           No|           2600|             1911|       116|             360|             0|    Semiurban|          N|\n|LP001066|  Male|    Yes|         0|    Graduate|          Yes|           9560|                0|       191|             360|             1|    Semiurban|          Y|\n+--------+------+-------+----------+------------+-------------+---------------+-----------------+----------+----------------+--------------+-------------+-----------+\nonly showing top 20 rows\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"data","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Loan_ID","nullable":true,"type":"string"},{"metadata":{},"name":"Gender","nullable":true,"type":"string"},{"metadata":{},"name":"Married","nullable":true,"type":"string"},{"metadata":{},"name":"Dependents","nullable":true,"type":"string"},{"metadata":{},"name":"Education","nullable":true,"type":"string"},{"metadata":{},"name":"Self_Employed","nullable":true,"type":"string"},{"metadata":{},"name":"ApplicantIncome","nullable":true,"type":"integer"},{"metadata":{},"name":"CoapplicantIncome","nullable":true,"type":"integer"},{"metadata":{},"name":"LoanAmount","nullable":true,"type":"integer"},{"metadata":{},"name":"Loan_Amount_Term","nullable":true,"type":"integer"},{"metadata":{},"name":"Credit_History","nullable":true,"type":"integer"},{"metadata":{},"name":"Property_Area","nullable":true,"type":"string"},{"metadata":{},"name":"Loan_Status","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407576261,"submitTime":1570407558951,"finishTime":1570407576915,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":{"scrolled":false},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d5299ff0-4e55-4208-a0f1-95e97e31598d"},{"version":"CommandV1","origId":2546950486988884,"guid":"75874d14-e3f5-4fd2-a7b5-6f9ca3715bd1","subtype":"command","commandType":"auto","position":4.375,"command":"%md ### Convert a Spark Dataframe to Pandas Dataframe\nThe data in a Spark dataframe read from CSV file will be converted to a Pandas dataframe for sklearn use.","commandVersion":42,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407558952,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ba2fde2e-b0dc-4700-b815-781f8330a747"},{"version":"CommandV1","origId":2546950486988885,"guid":"5eb267f7-71ec-4972-a07a-da5e59589443","subtype":"command","commandType":"auto","position":4.5625,"command":"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"30fa47a3-5863-4a5c-ac3c-6d21db3075ef"},{"version":"CommandV1","origId":2546950486988886,"guid":"8c5f89e2-5619-4abc-8380-35637f1df20a","subtype":"command","commandType":"auto","position":4.75,"command":"dataset = data.toPandas()\ndataset.describe()","commandVersion":0,"state":"finished","results":{"type":"htmlSandbox","data":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ApplicantIncome</th>\n      <th>CoapplicantIncome</th>\n      <th>LoanAmount</th>\n      <th>Loan_Amount_Term</th>\n      <th>Credit_History</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>5375.753138</td>\n      <td>1585.612971</td>\n      <td>144.995816</td>\n      <td>342.351464</td>\n      <td>0.853556</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>5677.275400</td>\n      <td>2622.049926</td>\n      <td>80.575108</td>\n      <td>64.920480</td>\n      <td>0.353921</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>150.000000</td>\n      <td>0.000000</td>\n      <td>9.000000</td>\n      <td>36.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2904.250000</td>\n      <td>0.000000</td>\n      <td>100.000000</td>\n      <td>360.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>3863.000000</td>\n      <td>1106.000000</td>\n      <td>128.000000</td>\n      <td>360.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>5899.500000</td>\n      <td>2253.750000</td>\n      <td>170.000000</td>\n      <td>360.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>81000.000000</td>\n      <td>33837.000000</td>\n      <td>600.000000</td>\n      <td>480.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"textData":"<div class=\"ansiout\">/databricks/python/lib/python3.7/site-packages/pyarrow/__init__.py:152: UserWarning: pyarrow.open_stream is deprecated, please use pyarrow.ipc.open_stream\n  warnings.warn(&#34;pyarrow.open_stream is deprecated, please use &#34;\nOut[3]: </div>"},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407576931,"submitTime":1570407558962,"finishTime":1570407577521,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5ade338a-43d2-42c9-b483-38053d188001"},{"version":"CommandV1","origId":2546950486988887,"guid":"ee218af2-237d-4169-86dc-2dfb9cf71d2b","subtype":"command","commandType":"auto","position":5.0,"command":"dataset.count()","commandVersion":19,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">Out[4]: Loan_ID              478\nGender               478\nMarried              478\nDependents           478\nEducation            478\nSelf_Employed        478\nApplicantIncome      478\nCoapplicantIncome    478\nLoanAmount           478\nLoan_Amount_Term     478\nCredit_History       478\nProperty_Area        478\nLoan_Status          478\ndtype: int64</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407577536,"submitTime":1570407558963,"finishTime":1570407577570,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"46224cc0-5faa-4826-9154-1996d096313f"},{"version":"CommandV1","origId":2546950486988888,"guid":"60474ecb-f292-45c2-a680-df042465196d","subtype":"command","commandType":"auto","position":5.5,"command":"%md ### Load libraries\nWe need Pandas, Numpy and Sklearn libraries.","commandVersion":32,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407558964,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"bf7b0a1d-a5e6-4040-a149-645d649a65f7"},{"version":"CommandV1","origId":2546950486988889,"guid":"ab0a8b2f-9886-4707-b96e-c1d50ba21718","subtype":"command","commandType":"auto","position":6.0,"command":"#Load libraries\nimport pandas as pd\nimport numpy as np\nfrom sklearn import model_selection\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier, export_graphviz\n","commandVersion":2,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407577585,"submitTime":1570407558969,"finishTime":1570407577957,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7a0f8355-b385-4c03-8b54-f740c1efcaf2"},{"version":"CommandV1","origId":2546950486988890,"guid":"69f04cc4-be5c-47e0-a726-71a6e60c1e48","subtype":"command","commandType":"auto","position":6.75,"command":"%md ### Encode String Columns\nSklearn requires all inputs to be numeric, we should convert all our categorical variables into numeric by encoding the categories. Here we use method map for demonstration. We can also use LabelEncoder. Also, we need to remove a row that has at least one NaN in it for sklearn algorithm to run.","commandVersion":114,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407558969,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c5ca120c-ef83-4a67-8111-89d93496dae9"},{"version":"CommandV1","origId":2546950486988891,"guid":"bab07ef3-0c7b-4add-a903-00fc0fe5195d","subtype":"command","commandType":"auto","position":7.5,"command":"dataset['Gender'] = dataset['Gender'].map({'Male':0, 'Female':1})\ndataset['Married'] = dataset['Married'].map({'Yes':0, 'No':1})\ndataset['Dependents'] = dataset['Dependents'].map({'0':0, '1':1, '2':2, '3+':3})\ndataset['Education'] = dataset['Education'].map({'Graduate':0, 'Not Graduate':1})\ndataset['Self_Employed'] = dataset['Self_Employed'].map({'Yes':0, 'No':1})\ndataset['Property_Area'] = dataset['Property_Area'].map({'Urban':0, 'Semiurban':1, 'Rural':2})\ndataset['Loan_Status'] = dataset['Loan_Status'].map({'Y':0, 'N':1})\ndataset = dataset.dropna()\ndataset.head()","commandVersion":100,"state":"finished","results":{"type":"htmlSandbox","data":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Loan_ID</th>\n      <th>Gender</th>\n      <th>Married</th>\n      <th>Dependents</th>\n      <th>Education</th>\n      <th>Self_Employed</th>\n      <th>ApplicantIncome</th>\n      <th>CoapplicantIncome</th>\n      <th>LoanAmount</th>\n      <th>Loan_Amount_Term</th>\n      <th>Credit_History</th>\n      <th>Property_Area</th>\n      <th>Loan_Status</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>LP001003</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>4583.0</td>\n      <td>1508.0</td>\n      <td>128.0</td>\n      <td>360.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>LP001005</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>3000.0</td>\n      <td>0.0</td>\n      <td>66.0</td>\n      <td>360.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>LP001006</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>2583.0</td>\n      <td>2358.0</td>\n      <td>120.0</td>\n      <td>360.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>LP001008</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>6000.0</td>\n      <td>0.0</td>\n      <td>141.0</td>\n      <td>360.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>LP001011</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5417.0</td>\n      <td>4196.0</td>\n      <td>267.0</td>\n      <td>360.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"textData":"<div class=\"ansiout\">Out[6]: </div>"},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407577963,"submitTime":1570407558975,"finishTime":1570407578037,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"09cc6c08-ba1b-4063-abb2-a14609c90ae6"},{"version":"CommandV1","origId":2546950486988892,"guid":"f4995211-1e1e-4373-9be9-0e382c09db47","subtype":"command","commandType":"auto","position":7.75,"command":"dataset.describe()","commandVersion":1,"state":"finished","results":{"type":"htmlSandbox","data":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Gender</th>\n      <th>Married</th>\n      <th>Dependents</th>\n      <th>Education</th>\n      <th>Self_Employed</th>\n      <th>ApplicantIncome</th>\n      <th>CoapplicantIncome</th>\n      <th>LoanAmount</th>\n      <th>Loan_Amount_Term</th>\n      <th>Credit_History</th>\n      <th>Property_Area</th>\n      <th>Loan_Status</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>0.179916</td>\n      <td>0.353556</td>\n      <td>0.776151</td>\n      <td>0.202929</td>\n      <td>0.861925</td>\n      <td>5375.753138</td>\n      <td>1585.612971</td>\n      <td>144.995816</td>\n      <td>342.351464</td>\n      <td>0.853556</td>\n      <td>0.976987</td>\n      <td>0.309623</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.384520</td>\n      <td>0.478574</td>\n      <td>1.020799</td>\n      <td>0.402601</td>\n      <td>0.345340</td>\n      <td>5677.275400</td>\n      <td>2622.049926</td>\n      <td>80.575108</td>\n      <td>64.920480</td>\n      <td>0.353921</td>\n      <td>0.775336</td>\n      <td>0.462823</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>150.000000</td>\n      <td>0.000000</td>\n      <td>9.000000</td>\n      <td>36.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>2904.250000</td>\n      <td>0.000000</td>\n      <td>100.000000</td>\n      <td>360.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>3863.000000</td>\n      <td>1106.000000</td>\n      <td>128.000000</td>\n      <td>360.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>5899.500000</td>\n      <td>2253.750000</td>\n      <td>170.000000</td>\n      <td>360.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>3.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>81000.000000</td>\n      <td>33837.000000</td>\n      <td>600.000000</td>\n      <td>480.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"textData":"<div class=\"ansiout\">Out[7]: </div>"},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407578050,"submitTime":1570407558975,"finishTime":1570407578148,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5c44e31a-cae5-470e-93c2-a80f59c17642"},{"version":"CommandV1","origId":2546950486988893,"guid":"9cfd1070-d073-49e0-b2c4-042ed04495c7","subtype":"command","commandType":"auto","position":7.875,"command":"%md ### Splitting the Dataset for Trainingn and Testing\nAs we have seen already, In Machine learning we have two kinds of datasets\n\nTraining dataset - used to train our model\n\nTesting dataset - used to test if our model is making accurate predictions\n\nWe are going to use 80% of it for training the model and 20% of the records to evaluate our model.","commandVersion":14,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407558976,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b2e875d5-5b73-4cc3-b441-5105e4630865"},{"version":"CommandV1","origId":2546950486988894,"guid":"a2e2881a-7c5f-4b03-8c21-00bfb9736527","subtype":"command","commandType":"auto","position":8.0,"command":"array = dataset.values\nX = array[:,1:11]\nY = array[:,12]\nX = X.astype('int') \nY = Y.astype('int') \nx_train, x_test, y_train, y_test = model_selection.train_test_split(X, Y, test_size=0.2, random_state=7)\nprint(X)\nprint(Y)","commandVersion":262,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">[[  0   0   1 ... 128 360   1]\n [  0   0   0 ...  66 360   1]\n [  0   0   0 ... 120 360   1]\n ...\n [  0   0   1 ... 253 360   1]\n [  0   0   2 ... 187 360   1]\n [  1   1   0 ... 133 360   0]]\n[1 0 0 0 0 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 1 0 0 0 0 1 0\n 0 0 1 1 1 0 0 1 0 0 0 0 1 1 1 1 0 0 1 0 0 0 0 1 1 1 1 0 1 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 0 0 0 0 0\n 0 0 1 0 1 0 1 1 0 0 0 0 0 1 1 0 0 1 0 1 0 1 0 1 0 0 1 0 1 1 0 1 0 0 1 0 0\n 1 1 0 0 1 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0\n 0 1 0 0 0 1 0 0 0 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\n 0 0 0 1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0\n 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 0\n 0 1 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 1 1 1 0 1 0 1 1 0 0 0 0 0 0 1\n 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 1 0 0 1 0 1 1 0 1 0 0 0 0\n 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 0 0 1 1 0 0 0\n 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 0 0 1 0 1 1 1\n 0 0 1 1 0 0 0 0 1 0 1 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407578170,"submitTime":1570407558982,"finishTime":1570407578207,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"50e27b98-5dc8-44cf-ac58-edec80a4ef3b"},{"version":"CommandV1","origId":2546950486988895,"guid":"9382b5a7-e309-4df9-9558-e16442bb66fb","subtype":"command","commandType":"auto","position":8.5,"command":"%md ### Train and Evaluate a Model\nLogistic Regression is a classification algorithm. It is used to predict a binary outcome (1 / 0, Yes / No, True / False) given a set of independent variables.","commandVersion":13,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407558982,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b362acb9-8b6e-4835-a20c-a28e8a85a344"},{"version":"CommandV1","origId":2546950486988896,"guid":"1a8fba26-af16-475a-bff6-1a353b7512a4","subtype":"command","commandType":"auto","position":9.0,"command":"model = LogisticRegression(solver='lbfgs')\nmodel.fit(x_train,y_train)\npredictions = model.predict(x_test)\nprint(accuracy_score(y_test, predictions))","commandVersion":2,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">0.75\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407578220,"submitTime":1570407558988,"finishTime":1570407578269,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1aae9b86-82e8-4f3c-844d-75d6e20ed6bd"},{"version":"CommandV1","origId":2546950486988897,"guid":"af9a27a6-6e02-41a1-b980-7ecf1f2a8e2f","subtype":"command","commandType":"auto","position":10.0,"command":"import pickle\n\n# Dump the trained logistic_model with Pickle\npkl_filename = '/dbfs/mnt/onbpoc/model/logistic_model_20191006.pkl'\n\n# Open the file to save as pkl file\npkl_ins = open(pkl_filename, 'wb')\npickle.dump(model, pkl_ins)\n\n# Close the pickle instances\npkl_ins.close()\n\nprint(\"done\")","commandVersion":65,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">done\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407578302,"submitTime":1570407558996,"finishTime":1570407578680,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"47d27b09-be78-491b-8df4-0ed587c96ecd"},{"version":"CommandV1","origId":2546950486988898,"guid":"a44c3b7a-9425-40dd-821c-2e66849c02cb","subtype":"command","commandType":"auto","position":9.5,"command":"%md ### Save the Trained Model as a pkl file\nPickling is the process converting any Python object into a stream of bytes by following the hierarchy of the object we are trying to convert.","commandVersion":12,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407558990,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"8168dcc9-efb9-44cb-9d72-7cd55f7a8c86"},{"version":"CommandV1","origId":2546950486988899,"guid":"4b820479-8e57-4efa-8f0e-abc0ae0e6c46","subtype":"command","commandType":"auto","position":9.25,"command":"print(\"Logistic Regression classifier :: \", model)","commandVersion":6,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">Logistic Regression classifier ::  LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n          intercept_scaling=1, max_iter=100, multi_class=&#39;warn&#39;,\n          n_jobs=None, penalty=&#39;l2&#39;, random_state=None, solver=&#39;lbfgs&#39;,\n          tol=0.0001, verbose=0, warm_start=False)\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407578275,"submitTime":1570407558989,"finishTime":1570407578296,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6867ff58-c3fe-4aff-a294-3353590bee16"},{"version":"CommandV1","origId":2546950486988900,"guid":"62dab2fd-1ce1-4f79-9d09-e75e37f895c8","subtype":"command","commandType":"auto","position":11.0,"command":"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7996e260-8884-4817-9826-4ff76310fce4"}],"dashboards":[],"guid":"f35749c7-2c5c-403a-a86b-b3222144d4b7","globalVars":{},"iPythonMetadata":{"nbformat":4,"IPythonMetadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"mimetype":"text/x-python","name":"python","pygments_lexer":"ipython3","codemirror_mode":{"name":"ipython","version":"3"},"version":"3.6.5","nbconvert_exporter":"python","file_extension":".py"},"name":"Python Classification","notebookId":342710160787076}},"inputWidgets":{}}