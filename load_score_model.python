{"version":"NotebookV1","origId":2546950486988901,"name":"load_score_model","language":"python","commands":[{"version":"CommandV1","origId":836719663453805,"guid":"f23ff4ac-ae6b-43d0-b8a3-008c0c65765a","subtype":"command","commandType":"auto","position":9.875,"command":"%md ### Score the unseen dataset with the Model\nLogistic Regression is a classification algorithm. It is used to predict a binary outcome (1 / 0, Yes / No, True / False) given a set of independent variables.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407690362,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"995b71e8-468e-4149-ae78-ea8824885273"},{"version":"CommandV1","origId":836719663453806,"guid":"3b2d37cd-bdcb-4ad7-bb26-0a1eb88bb909","subtype":"command","commandType":"auto","position":9.9375,"command":"predictions = model.predict(X)\nprint(accuracy_score(Y, predictions))","commandVersion":5,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">0.8096234309623431\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407702867,"submitTime":1570407690386,"finishTime":1570407702889,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ff261c22-0d9f-4193-9230-e8775e42202a"},{"version":"CommandV1","origId":836719663453807,"guid":"d745b8fd-21b7-4f51-82aa-237187163c36","subtype":"command","commandType":"auto","position":9.96875,"command":"%md ## Manually Calculation of Accuracy\nWe can calculate the model prediction accuracy based the groundtruth Y and prediction results, predictions.","commandVersion":49,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407690386,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ea55641b-a236-49c5-90df-9269b4f8c0b7"},{"version":"CommandV1","origId":836719663453808,"guid":"6fdecdc0-080c-45a9-8a1c-19f42a21d281","subtype":"command","commandType":"auto","position":10.5,"command":"%md ## Prepare the Dataframe for output","commandVersion":11,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3140ee6b-0160-4092-b6f4-e910220e4d8b"},{"version":"CommandV1","origId":836719663453809,"guid":"9e98d9a2-feee-4061-8cce-da76201e9184","subtype":"command","commandType":"auto","position":13.0,"command":"","commandVersion":0,"state":"error","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a69a2e3a-55ef-4498-8b00-15006872c11b"},{"version":"CommandV1","origId":2546950486988902,"guid":"521a12e5-d947-496d-817c-49a0bb08ac15","subtype":"command","commandType":"auto","position":1.0,"command":"%md ## Load a Saved Logistic Model and Use it to Score Unseen Dataset\n\nWe will load the pickel file we created for a trained Logistic model and use it to score an unseen dataset.\n\n","commandVersion":66,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407689716,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"db821792-2201-43f1-8773-8acdf30b4696"},{"version":"CommandV1","origId":2546950486988903,"guid":"360bbabc-c22e-4374-8e01-5cb3befe405d","subtype":"command","commandType":"auto","position":4.0,"command":"from pyspark.sql.types import *\nfrom pyspark.sql.functions import *","commandVersion":2,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407701408,"submitTime":1570407690234,"finishTime":1570407701427,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"aa4b5477-9f91-42f4-b789-46ed220bbe79"},{"version":"CommandV1","origId":2546950486988904,"guid":"2685bd3c-e7fc-4e6c-b703-6dc3e1089712","subtype":"command","commandType":"auto","position":3.0,"command":"%md ### Load Source Data\nThe data is provided as a CSV file that has already been cleaned up for modeling. The data includes feature and label. We will load this data into a dataframe and display it.","commandVersion":26,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407690204,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"28ce99ca-5552-49ad-be4d-5ea3c0776c2c"},{"version":"CommandV1","origId":2546950486988905,"guid":"04f53b31-2070-45e1-8070-1106aa94ec7a","subtype":"command","commandType":"auto","position":4.375,"command":"loanSchema = StructType([\n  StructField(\"Loan_ID\", StringType(), False),\n  StructField(\"Gender\", StringType(), False),\n  StructField(\"Married\", StringType(), False),\n  StructField(\"Dependents\", StringType(), False),\n  StructField(\"Education\", StringType(), False),\n  StructField(\"Self_Employed\", StringType(), False),\n  StructField(\"ApplicantIncome\", IntegerType(), False),\n  StructField(\"CoapplicantIncome\", IntegerType(), False),\n  StructField(\"LoanAmount\", IntegerType(), False),\n  StructField(\"Loan_Amount_Term\", IntegerType(), False),\n  StructField(\"Credit_History\", IntegerType(), False),\n  StructField(\"Property_Area\", StringType(), False),\n  StructField(\"Loan_Status\", StringType(), False),\n])\n\ndata = spark.read.csv('/mnt/onbpoc/input/Loan-applicant-details.csv', schema=loanSchema, header=False)\ndata.show()","commandVersion":77,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+--------+------+-------+----------+------------+-------------+---------------+-----------------+----------+----------------+--------------+-------------+-----------+\n| Loan_ID|Gender|Married|Dependents|   Education|Self_Employed|ApplicantIncome|CoapplicantIncome|LoanAmount|Loan_Amount_Term|Credit_History|Property_Area|Loan_Status|\n+--------+------+-------+----------+------------+-------------+---------------+-----------------+----------+----------------+--------------+-------------+-----------+\n|LP001003|  Male|    Yes|         1|    Graduate|           No|           4583|             1508|       128|             360|             1|        Rural|          N|\n|LP001005|  Male|    Yes|         0|    Graduate|          Yes|           3000|                0|        66|             360|             1|        Urban|          Y|\n|LP001006|  Male|    Yes|         0|Not Graduate|           No|           2583|             2358|       120|             360|             1|        Urban|          Y|\n|LP001008|  Male|     No|         0|    Graduate|           No|           6000|                0|       141|             360|             1|        Urban|          Y|\n|LP001011|  Male|    Yes|         2|    Graduate|          Yes|           5417|             4196|       267|             360|             1|        Urban|          Y|\n|LP001013|  Male|    Yes|         0|Not Graduate|           No|           2333|             1516|        95|             360|             1|        Urban|          Y|\n|LP001014|  Male|    Yes|        3+|    Graduate|           No|           3036|             2504|       158|             360|             0|    Semiurban|          N|\n|LP001018|  Male|    Yes|         2|    Graduate|           No|           4006|             1526|       168|             360|             1|        Urban|          Y|\n|LP001020|  Male|    Yes|         1|    Graduate|           No|          12841|            10968|       349|             360|             1|    Semiurban|          N|\n|LP001024|  Male|    Yes|         2|    Graduate|           No|           3200|              700|        70|             360|             1|        Urban|          Y|\n|LP001028|  Male|    Yes|         2|    Graduate|           No|           3073|             8106|       200|             360|             1|        Urban|          Y|\n|LP001029|  Male|     No|         0|    Graduate|           No|           1853|             2840|       114|             360|             1|        Rural|          N|\n|LP001030|  Male|    Yes|         2|    Graduate|           No|           1299|             1086|        17|             120|             1|        Urban|          Y|\n|LP001032|  Male|     No|         0|    Graduate|           No|           4950|                0|       125|             360|             1|        Urban|          Y|\n|LP001036|Female|     No|         0|    Graduate|           No|           3510|                0|        76|             360|             0|        Urban|          N|\n|LP001038|  Male|    Yes|         0|Not Graduate|           No|           4887|                0|       133|             360|             1|        Rural|          N|\n|LP001043|  Male|    Yes|         0|Not Graduate|           No|           7660|                0|       104|             360|             0|        Urban|          N|\n|LP001046|  Male|    Yes|         1|    Graduate|           No|           5955|             5625|       315|             360|             1|        Urban|          Y|\n|LP001047|  Male|    Yes|         0|Not Graduate|           No|           2600|             1911|       116|             360|             0|    Semiurban|          N|\n|LP001066|  Male|    Yes|         0|    Graduate|          Yes|           9560|                0|       191|             360|             1|    Semiurban|          Y|\n+--------+------+-------+----------+------------+-------------+---------------+-----------------+----------+----------------+--------------+-------------+-----------+\nonly showing top 20 rows\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"data","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Loan_ID","nullable":true,"type":"string"},{"metadata":{},"name":"Gender","nullable":true,"type":"string"},{"metadata":{},"name":"Married","nullable":true,"type":"string"},{"metadata":{},"name":"Dependents","nullable":true,"type":"string"},{"metadata":{},"name":"Education","nullable":true,"type":"string"},{"metadata":{},"name":"Self_Employed","nullable":true,"type":"string"},{"metadata":{},"name":"ApplicantIncome","nullable":true,"type":"integer"},{"metadata":{},"name":"CoapplicantIncome","nullable":true,"type":"integer"},{"metadata":{},"name":"LoanAmount","nullable":true,"type":"integer"},{"metadata":{},"name":"Loan_Amount_Term","nullable":true,"type":"integer"},{"metadata":{},"name":"Credit_History","nullable":true,"type":"integer"},{"metadata":{},"name":"Property_Area","nullable":true,"type":"string"},{"metadata":{},"name":"Loan_Status","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407701434,"submitTime":1570407690235,"finishTime":1570407701938,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":{"scrolled":false},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"d5299ff0-4e55-4208-a0f1-95e97e31598d"},{"version":"CommandV1","origId":2546950486988906,"guid":"b07cdc76-cab2-4efb-a781-01cebe1e1f46","subtype":"command","commandType":"auto","position":4.5625,"command":"%md ### Convert a Spark Dataframe to Pandas Dataframe\nThe data in a Spark dataframe read from CSV file will be converted to a Pandas dataframe for sklearn use.","commandVersion":42,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407690236,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ba2fde2e-b0dc-4700-b815-781f8330a747"},{"version":"CommandV1","origId":2546950486988908,"guid":"7db1bd54-5a42-40e8-b742-ea90dee1ad8c","subtype":"command","commandType":"auto","position":5.0,"command":"dataset = data.toPandas()\ndataset.describe()","commandVersion":0,"state":"finished","results":{"type":"htmlSandbox","data":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ApplicantIncome</th>\n      <th>CoapplicantIncome</th>\n      <th>LoanAmount</th>\n      <th>Loan_Amount_Term</th>\n      <th>Credit_History</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>5375.753138</td>\n      <td>1585.612971</td>\n      <td>144.995816</td>\n      <td>342.351464</td>\n      <td>0.853556</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>5677.275400</td>\n      <td>2622.049926</td>\n      <td>80.575108</td>\n      <td>64.920480</td>\n      <td>0.353921</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>150.000000</td>\n      <td>0.000000</td>\n      <td>9.000000</td>\n      <td>36.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2904.250000</td>\n      <td>0.000000</td>\n      <td>100.000000</td>\n      <td>360.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>3863.000000</td>\n      <td>1106.000000</td>\n      <td>128.000000</td>\n      <td>360.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>5899.500000</td>\n      <td>2253.750000</td>\n      <td>170.000000</td>\n      <td>360.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>81000.000000</td>\n      <td>33837.000000</td>\n      <td>600.000000</td>\n      <td>480.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"textData":"<div class=\"ansiout\">/databricks/python/lib/python3.7/site-packages/pyarrow/__init__.py:152: UserWarning: pyarrow.open_stream is deprecated, please use pyarrow.ipc.open_stream\n  warnings.warn(&#34;pyarrow.open_stream is deprecated, please use &#34;\nOut[5]: </div>"},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407701947,"submitTime":1570407690257,"finishTime":1570407702520,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5ade338a-43d2-42c9-b483-38053d188001"},{"version":"CommandV1","origId":2546950486988909,"guid":"7f9cccec-72c4-4a31-a191-9194934f3918","subtype":"command","commandType":"auto","position":5.5,"command":"dataset.count()","commandVersion":19,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">Out[6]: Loan_ID              478\nGender               478\nMarried              478\nDependents           478\nEducation            478\nSelf_Employed        478\nApplicantIncome      478\nCoapplicantIncome    478\nLoanAmount           478\nLoan_Amount_Term     478\nCredit_History       478\nProperty_Area        478\nLoan_Status          478\ndtype: int64</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407702527,"submitTime":1570407690258,"finishTime":1570407702559,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"46224cc0-5faa-4826-9154-1996d096313f"},{"version":"CommandV1","origId":2546950486988910,"guid":"f1b0bad1-6cc6-4f0a-b4e7-8f712c5d74d8","subtype":"command","commandType":"auto","position":6.0,"command":"%md ### Load libraries\nWe need Pandas, Numpy and Sklearn libraries.","commandVersion":32,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407690259,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"bf7b0a1d-a5e6-4040-a149-645d649a65f7"},{"version":"CommandV1","origId":2546950486988911,"guid":"cfb5d62e-d083-4e68-99f8-89f6f14bc813","subtype":"command","commandType":"auto","position":6.75,"command":"#Load libraries\nimport pandas as pd\nimport numpy as np\nfrom sklearn import model_selection\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier, export_graphviz\n","commandVersion":2,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407702568,"submitTime":1570407690273,"finishTime":1570407702607,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7a0f8355-b385-4c03-8b54-f740c1efcaf2"},{"version":"CommandV1","origId":2546950486988912,"guid":"54983984-7b66-429e-82ad-b46babb9087e","subtype":"command","commandType":"auto","position":7.5,"command":"%md ### Encode String Columns\nSklearn requires all inputs to be numeric, we should convert all our categorical variables into numeric by encoding the categories. Here we use method map for demonstration. We can also use LabelEncoder. Also, we need to remove a row that has at least one NaN in it for sklearn algorithm to run.","commandVersion":114,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407690274,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c5ca120c-ef83-4a67-8111-89d93496dae9"},{"version":"CommandV1","origId":2546950486988913,"guid":"0f4d3435-e2b1-40f0-b596-2b40a266932f","subtype":"command","commandType":"auto","position":7.75,"command":"dataset['Gender'] = dataset['Gender'].map({'Male':0, 'Female':1})\ndataset['Married'] = dataset['Married'].map({'Yes':0, 'No':1})\ndataset['Dependents'] = dataset['Dependents'].map({'0':0, '1':1, '2':2, '3+':3})\ndataset['Education'] = dataset['Education'].map({'Graduate':0, 'Not Graduate':1})\ndataset['Self_Employed'] = dataset['Self_Employed'].map({'Yes':0, 'No':1})\ndataset['Property_Area'] = dataset['Property_Area'].map({'Urban':0, 'Semiurban':1, 'Rural':2})\ndataset['Loan_Status'] = dataset['Loan_Status'].map({'Y':0, 'N':1})\ndataset = dataset.dropna()\ndataset.head()","commandVersion":100,"state":"finished","results":{"type":"htmlSandbox","data":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Loan_ID</th>\n      <th>Gender</th>\n      <th>Married</th>\n      <th>Dependents</th>\n      <th>Education</th>\n      <th>Self_Employed</th>\n      <th>ApplicantIncome</th>\n      <th>CoapplicantIncome</th>\n      <th>LoanAmount</th>\n      <th>Loan_Amount_Term</th>\n      <th>Credit_History</th>\n      <th>Property_Area</th>\n      <th>Loan_Status</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>LP001003</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>4583.0</td>\n      <td>1508.0</td>\n      <td>128.0</td>\n      <td>360.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>LP001005</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>3000.0</td>\n      <td>0.0</td>\n      <td>66.0</td>\n      <td>360.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>LP001006</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>2583.0</td>\n      <td>2358.0</td>\n      <td>120.0</td>\n      <td>360.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>LP001008</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>6000.0</td>\n      <td>0.0</td>\n      <td>141.0</td>\n      <td>360.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>LP001011</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5417.0</td>\n      <td>4196.0</td>\n      <td>267.0</td>\n      <td>360.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"textData":"<div class=\"ansiout\">Out[8]: </div>"},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407702613,"submitTime":1570407690301,"finishTime":1570407702679,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"09cc6c08-ba1b-4063-abb2-a14609c90ae6"},{"version":"CommandV1","origId":2546950486988914,"guid":"472a0fc5-b5fa-4125-a9c1-dbae56a0582f","subtype":"command","commandType":"auto","position":7.875,"command":"dataset.describe()","commandVersion":1,"state":"finished","results":{"type":"htmlSandbox","data":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Gender</th>\n      <th>Married</th>\n      <th>Dependents</th>\n      <th>Education</th>\n      <th>Self_Employed</th>\n      <th>ApplicantIncome</th>\n      <th>CoapplicantIncome</th>\n      <th>LoanAmount</th>\n      <th>Loan_Amount_Term</th>\n      <th>Credit_History</th>\n      <th>Property_Area</th>\n      <th>Loan_Status</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n      <td>478.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>0.179916</td>\n      <td>0.353556</td>\n      <td>0.776151</td>\n      <td>0.202929</td>\n      <td>0.861925</td>\n      <td>5375.753138</td>\n      <td>1585.612971</td>\n      <td>144.995816</td>\n      <td>342.351464</td>\n      <td>0.853556</td>\n      <td>0.976987</td>\n      <td>0.309623</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.384520</td>\n      <td>0.478574</td>\n      <td>1.020799</td>\n      <td>0.402601</td>\n      <td>0.345340</td>\n      <td>5677.275400</td>\n      <td>2622.049926</td>\n      <td>80.575108</td>\n      <td>64.920480</td>\n      <td>0.353921</td>\n      <td>0.775336</td>\n      <td>0.462823</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>150.000000</td>\n      <td>0.000000</td>\n      <td>9.000000</td>\n      <td>36.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>2904.250000</td>\n      <td>0.000000</td>\n      <td>100.000000</td>\n      <td>360.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>3863.000000</td>\n      <td>1106.000000</td>\n      <td>128.000000</td>\n      <td>360.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>5899.500000</td>\n      <td>2253.750000</td>\n      <td>170.000000</td>\n      <td>360.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>3.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>81000.000000</td>\n      <td>33837.000000</td>\n      <td>600.000000</td>\n      <td>480.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"textData":"<div class=\"ansiout\">Out[9]: </div>"},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407702685,"submitTime":1570407690302,"finishTime":1570407702765,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5c44e31a-cae5-470e-93c2-a80f59c17642"},{"version":"CommandV1","origId":2546950486988915,"guid":"abfd11f6-9857-4d7b-a3d8-3e75ccb17cfb","subtype":"command","commandType":"auto","position":8.0,"command":"%md ### Prepare unseen dataset\n\nWe are going to use whole dataset and pretent we have never seen it and ask our model to give us the predictions.","commandVersion":48,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407690302,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b2e875d5-5b73-4cc3-b441-5105e4630865"},{"version":"CommandV1","origId":2546950486988916,"guid":"32cc1b54-3684-4f07-bd89-e59ec3e5af08","subtype":"command","commandType":"auto","position":8.5,"command":"array = dataset.values\nX = array[:,1:11]\nY = array[:,12]\nX = X.astype('int') \nY = Y.astype('int') \n\nprint(X)\nprint(Y)","commandVersion":263,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">[[  0   0   1 ... 128 360   1]\n [  0   0   0 ...  66 360   1]\n [  0   0   0 ... 120 360   1]\n ...\n [  0   0   1 ... 253 360   1]\n [  0   0   2 ... 187 360   1]\n [  1   1   0 ... 133 360   0]]\n[1 0 0 0 0 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 1 0 0 0 0 1 0\n 0 0 1 1 1 0 0 1 0 0 0 0 1 1 1 1 0 0 1 0 0 0 0 1 1 1 1 0 1 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 0 0 0 0 0\n 0 0 1 0 1 0 1 1 0 0 0 0 0 1 1 0 0 1 0 1 0 1 0 1 0 0 1 0 1 1 0 1 0 0 1 0 0\n 1 1 0 0 1 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0\n 0 1 0 0 0 1 0 0 0 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\n 0 0 0 1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0\n 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 0\n 0 1 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 1 1 1 0 1 0 1 1 0 0 0 0 0 0 1\n 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 1 0 0 1 0 1 1 0 1 0 0 0 0\n 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 0 0 1 1 0 0 0\n 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 0 0 1 0 1 1 1\n 0 0 1 1 0 0 0 0 1 0 1 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407702771,"submitTime":1570407690340,"finishTime":1570407702793,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"50e27b98-5dc8-44cf-ac58-edec80a4ef3b"},{"version":"CommandV1","origId":2546950486988917,"guid":"2da773b5-f7dc-4541-86ca-892f47426b71","subtype":"command","commandType":"auto","position":9.0,"command":"%md ### Score the unseen dataset with the Model\nLogistic Regression is a classification algorithm. It is used to predict a binary outcome (1 / 0, Yes / No, True / False) given a set of independent variables.","commandVersion":21,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407690340,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b362acb9-8b6e-4835-a20c-a28e8a85a344"},{"version":"CommandV1","origId":2546950486988918,"guid":"eb52cb04-7c60-4a5d-ae33-45899bd40f89","subtype":"command","commandType":"auto","position":9.25,"command":"#model = LogisticRegression(solver='lbfgs')\n#model.fit(x_train,y_train)\npredictions = model.predict(X)\nprint(accuracy_score(Y, predictions))","commandVersion":8,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">0.8096234309623431\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407702797,"submitTime":1570407690361,"finishTime":1570407702817,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1aae9b86-82e8-4f3c-844d-75d6e20ed6bd"},{"version":"CommandV1","origId":2546950486988919,"guid":"aa2bcd47-4dd7-4246-9e42-1be6c2396ee4","subtype":"command","commandType":"auto","position":9.5,"command":"print(predictions)\nprint(Y)","commandVersion":15,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">[0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\n 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0\n 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0\n 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1\n 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0\n 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 1 0 1 0 1\n 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]\n[1 0 0 0 0 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 1 0 0 0 0 1 0\n 0 0 1 1 1 0 0 1 0 0 0 0 1 1 1 1 0 0 1 0 0 0 0 1 1 1 1 0 1 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 0 0 0 0 0\n 0 0 1 0 1 0 1 1 0 0 0 0 0 1 1 0 0 1 0 1 0 1 0 1 0 0 1 0 1 1 0 1 0 0 1 0 0\n 1 1 0 0 1 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0\n 0 1 0 0 0 1 0 0 0 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\n 0 0 0 1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0\n 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 0\n 0 1 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 1 1 1 0 1 0 1 1 0 0 0 0 0 0 1\n 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 1 0 0 1 0 1 1 0 1 0 0 0 0\n 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 0 0 1 1 0 0 0\n 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 0 0 1 0 1 1 1\n 0 0 1 1 0 0 0 0 1 0 1 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407702821,"submitTime":1570407690361,"finishTime":1570407702860,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6867ff58-c3fe-4aff-a294-3353590bee16"},{"version":"CommandV1","origId":2546950486988920,"guid":"4953b2a7-8c76-4569-a404-53dd9575b223","subtype":"command","commandType":"auto","position":1.75,"command":"%md ### Load the Trained Model from a pkl file\nPickling is the process converting any Python object into a stream of bytes by following the hierarchy of the object we are trying to convert.","commandVersion":17,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1570407689738,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"8168dcc9-efb9-44cb-9d72-7cd55f7a8c86"},{"version":"CommandV1","origId":2546950486988921,"guid":"45494457-359f-420b-9e47-8fb77b06cf27","subtype":"command","commandType":"auto","position":10.0,"command":"dif = 0\nfor i in range(len(predictions)):\n  if predictions[i] != Y[i]:\n    dif = dif + 1\n    \nprint(\"dif: \", dif)\nprint(\"accuracy: \", 1-dif/len(predictions))","commandVersion":128,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">dif:  91\naccuracy:  0.8096234309623431\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407702895,"submitTime":1570407690406,"finishTime":1570407702916,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"47d27b09-be78-491b-8df4-0ed587c96ecd"},{"version":"CommandV1","origId":2546950486988922,"guid":"bee15316-0729-486f-bf82-79b8ff10bb39","subtype":"command","commandType":"auto","position":11.0,"command":"dataset['predictions'] = predictions\nprint(dataset)","commandVersion":14,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">      Loan_ID  Gender  Married  ...  Property_Area  Loan_Status  predictions\n0    LP001003     0.0      0.0  ...            2.0          1.0            0\n1    LP001005     0.0      0.0  ...            0.0          0.0            0\n2    LP001006     0.0      0.0  ...            0.0          0.0            0\n3    LP001008     0.0      1.0  ...            0.0          0.0            0\n4    LP001011     0.0      0.0  ...            0.0          0.0            0\n5    LP001013     0.0      0.0  ...            0.0          0.0            0\n6    LP001014     0.0      0.0  ...            1.0          1.0            1\n7    LP001018     0.0      0.0  ...            0.0          0.0            0\n8    LP001020     0.0      0.0  ...            1.0          1.0            0\n9    LP001024     0.0      0.0  ...            0.0          0.0            0\n10   LP001028     0.0      0.0  ...            0.0          0.0            0\n11   LP001029     0.0      1.0  ...            2.0          1.0            0\n12   LP001030     0.0      0.0  ...            0.0          0.0            0\n13   LP001032     0.0      1.0  ...            0.0          0.0            0\n14   LP001036     1.0      1.0  ...            0.0          1.0            1\n15   LP001038     0.0      0.0  ...            2.0          1.0            0\n16   LP001043     0.0      0.0  ...            0.0          1.0            1\n17   LP001046     0.0      0.0  ...            0.0          0.0            0\n18   LP001047     0.0      0.0  ...            1.0          1.0            1\n19   LP001066     0.0      0.0  ...            1.0          0.0            0\n20   LP001068     0.0      0.0  ...            1.0          0.0            0\n21   LP001073     0.0      0.0  ...            0.0          0.0            0\n22   LP001086     0.0      1.0  ...            0.0          1.0            0\n23   LP001095     0.0      1.0  ...            0.0          1.0            0\n24   LP001097     0.0      1.0  ...            2.0          1.0            0\n25   LP001098     0.0      0.0  ...            1.0          0.0            0\n26   LP001100     0.0      1.0  ...            2.0          1.0            0\n27   LP001112     1.0      0.0  ...            1.0          0.0            0\n28   LP001114     0.0      1.0  ...            0.0          0.0            0\n29   LP001116     0.0      1.0  ...            1.0          0.0            0\n..        ...     ...      ...  ...            ...          ...          ...\n450  LP002868     0.0      0.0  ...            0.0          0.0            0\n451  LP002874     0.0      1.0  ...            0.0          0.0            0\n452  LP002877     0.0      0.0  ...            2.0          0.0            0\n453  LP002892     0.0      0.0  ...            1.0          0.0            0\n454  LP002893     0.0      1.0  ...            0.0          1.0            1\n455  LP002894     1.0      0.0  ...            1.0          0.0            0\n456  LP002911     0.0      0.0  ...            2.0          1.0            1\n457  LP002912     0.0      0.0  ...            2.0          1.0            0\n458  LP002916     0.0      0.0  ...            0.0          0.0            0\n459  LP002917     1.0      1.0  ...            1.0          0.0            0\n460  LP002926     0.0      0.0  ...            1.0          1.0            1\n461  LP002928     0.0      0.0  ...            1.0          0.0            0\n462  LP002931     0.0      0.0  ...            1.0          1.0            0\n463  LP002936     0.0      0.0  ...            2.0          0.0            0\n464  LP002938     0.0      0.0  ...            0.0          0.0            0\n465  LP002940     0.0      1.0  ...            2.0          0.0            0\n466  LP002941     0.0      0.0  ...            2.0          1.0            0\n467  LP002945     0.0      0.0  ...            2.0          0.0            0\n468  LP002948     0.0      0.0  ...            0.0          0.0            0\n469  LP002953     0.0      0.0  ...            0.0          0.0            0\n470  LP002958     0.0      1.0  ...            2.0          0.0            0\n471  LP002959     1.0      0.0  ...            1.0          0.0            0\n472  LP002961     0.0      0.0  ...            1.0          0.0            0\n473  LP002964     0.0      0.0  ...            2.0          0.0            0\n474  LP002974     0.0      0.0  ...            2.0          0.0            0\n475  LP002978     1.0      1.0  ...            2.0          0.0            0\n476  LP002979     0.0      0.0  ...            2.0          0.0            0\n477  LP002983     0.0      0.0  ...            0.0          0.0            0\n478  LP002984     0.0      0.0  ...            0.0          0.0            0\n479  LP002990     1.0      1.0  ...            1.0          1.0            1\n\n[478 rows x 14 columns]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407702921,"submitTime":1570407690407,"finishTime":1570407703035,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7996e260-8884-4817-9826-4ff76310fce4"},{"version":"CommandV1","origId":2546950486988923,"guid":"8fe7b413-1a7f-41cb-afc2-f88209e7533d","subtype":"command","commandType":"auto","position":1.5,"command":"import pickle","commandVersion":8,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407700951,"submitTime":1570407689738,"finishTime":1570407700981,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"582e9117-fe9d-498b-9053-452fd7447fb1"},{"version":"CommandV1","origId":2546950486988925,"guid":"383f1608-3e55-4082-92a1-279e84dcec82","subtype":"command","commandType":"auto","position":1.875,"command":"# Pickle file path\npkl_filename = '/dbfs/mnt/onbpoc/model/logistic_model_20191006.pkl'\n\n# Open the pkl file die read\npkl_ins = open(pkl_filename, 'rb')\nmodel = pickle.load(pkl_ins)\n\n# Close the pickle instances\npkl_ins.close()\n\nprint(\"model: \", model)","commandVersion":32,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">model:  LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n          intercept_scaling=1, max_iter=100, multi_class=&#39;warn&#39;,\n          n_jobs=None, penalty=&#39;l2&#39;, random_state=None, solver=&#39;lbfgs&#39;,\n          tol=0.0001, verbose=0, warm_start=False)\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1570407700990,"submitTime":1570407690203,"finishTime":1570407701402,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e33dd5a3-2607-49fb-bc27-a32731269c4e"},{"version":"CommandV1","origId":2546950486988926,"guid":"639be190-0662-480a-9d9c-cf0a5ea3a78d","subtype":"command","commandType":"auto","position":12.0,"command":"dataset.to_csv('/dbfs/mnt/onbpoc/output/loan_predictions.csv', encoding='utf-8', index=False)\n\nprint(\"done\")","commandVersion":45,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">done\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansi-red-fg\">FileNotFoundError</span>: [Errno 2] No such file or directory: &#39;&#34;/dbfs/mnt/onbpoc/output/loan_predictions.csv&#39;","error":"<div class=\"ansiout\"><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">FileNotFoundError</span>                         Traceback (most recent call last)\n<span class=\"ansi-green-fg\">&lt;command-2546950486988926&gt;</span> in <span class=\"ansi-cyan-fg\">&lt;module&gt;</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span><span class=\"ansi-red-fg\"> </span>dataset<span class=\"ansi-blue-fg\">.</span>to_csv<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">&#39;&#34;/dbfs/mnt/onbpoc/output/loan_predictions.csv&#39;</span><span class=\"ansi-blue-fg\">,</span> encoding<span class=\"ansi-blue-fg\">=</span><span class=\"ansi-blue-fg\">&#39;utf-8&#39;</span><span class=\"ansi-blue-fg\">,</span> index<span class=\"ansi-blue-fg\">=</span><span class=\"ansi-green-fg\">False</span><span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">      2</span> \n<span class=\"ansi-green-intense-fg ansi-bold\">      3</span> print<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">&#34;done&#34;</span><span class=\"ansi-blue-fg\">)</span>\n\n<span class=\"ansi-green-fg\">/databricks/python/lib/python3.7/site-packages/pandas/core/generic.py</span> in <span class=\"ansi-cyan-fg\">to_csv</span><span class=\"ansi-blue-fg\">(self, path_or_buf, sep, na_rep, float_format, columns, header, index, index_label, mode, encoding, compression, quoting, quotechar, line_terminator, chunksize, tupleize_cols, date_format, doublequote, escapechar, decimal)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">   3018</span>                                  doublequote<span class=\"ansi-blue-fg\">=</span>doublequote<span class=\"ansi-blue-fg\">,</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">   3019</span>                                  escapechar=escapechar, decimal=decimal)\n<span class=\"ansi-green-fg\">-&gt; 3020</span><span class=\"ansi-red-fg\">         </span>formatter<span class=\"ansi-blue-fg\">.</span>save<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">   3021</span> \n<span class=\"ansi-green-intense-fg ansi-bold\">   3022</span>         <span class=\"ansi-green-fg\">if</span> path_or_buf <span class=\"ansi-green-fg\">is</span> <span class=\"ansi-green-fg\">None</span><span class=\"ansi-blue-fg\">:</span>\n\n<span class=\"ansi-green-fg\">/databricks/python/lib/python3.7/site-packages/pandas/io/formats/csvs.py</span> in <span class=\"ansi-cyan-fg\">save</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    155</span>             f, handles = _get_handle(self.path_or_buf, self.mode,\n<span class=\"ansi-green-intense-fg ansi-bold\">    156</span>                                      encoding<span class=\"ansi-blue-fg\">=</span>self<span class=\"ansi-blue-fg\">.</span>encoding<span class=\"ansi-blue-fg\">,</span>\n<span class=\"ansi-green-fg\">--&gt; 157</span><span class=\"ansi-red-fg\">                                      compression=self.compression)\n</span><span class=\"ansi-green-intense-fg ansi-bold\">    158</span>             close <span class=\"ansi-blue-fg\">=</span> <span class=\"ansi-green-fg\">True</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    159</span> \n\n<span class=\"ansi-green-fg\">/databricks/python/lib/python3.7/site-packages/pandas/io/common.py</span> in <span class=\"ansi-cyan-fg\">_get_handle</span><span class=\"ansi-blue-fg\">(path_or_buf, mode, encoding, compression, memory_map, is_text)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    422</span>         <span class=\"ansi-green-fg\">elif</span> encoding<span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    423</span>             <span class=\"ansi-red-fg\"># Python 3 and encoding</span>\n<span class=\"ansi-green-fg\">--&gt; 424</span><span class=\"ansi-red-fg\">             </span>f <span class=\"ansi-blue-fg\">=</span> open<span class=\"ansi-blue-fg\">(</span>path_or_buf<span class=\"ansi-blue-fg\">,</span> mode<span class=\"ansi-blue-fg\">,</span> encoding<span class=\"ansi-blue-fg\">=</span>encoding<span class=\"ansi-blue-fg\">,</span> newline<span class=\"ansi-blue-fg\">=</span><span class=\"ansi-blue-fg\">&#34;&#34;</span><span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    425</span>         <span class=\"ansi-green-fg\">elif</span> is_text<span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    426</span>             <span class=\"ansi-red-fg\"># Python 3 and no explicit encoding</span>\n\n<span class=\"ansi-red-fg\">FileNotFoundError</span>: [Errno 2] No such file or directory: &#39;&#34;/dbfs/mnt/onbpoc/output/loan_predictions.csv&#39;</div>","workflows":[],"startTime":1570408446900,"submitTime":1570408446909,"finishTime":1570408447042,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"xinxue@microsoft.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"89175f6f-8d20-42a6-9ca5-a7e42ce7936d"}],"dashboards":[],"guid":"daa16eb2-c4f8-402d-ab97-163e54e938c2","globalVars":{},"iPythonMetadata":{"nbformat":4,"IPythonMetadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"mimetype":"text/x-python","name":"python","pygments_lexer":"ipython3","codemirror_mode":{"name":"ipython","version":"3"},"version":"3.6.5","nbconvert_exporter":"python","file_extension":".py"},"name":"Python Classification","notebookId":342710160787076}},"inputWidgets":{}}